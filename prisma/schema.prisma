// /prisma/schema.prisma

generator client {
  provider        = "prisma-client-js"
  // Add the line below to explicitly target the Windows engine
  binaryTargets   = ["native", "windows"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  email                String    @unique
  username             String    @unique
  password             String    @db.VarChar(255)
  imageUrl             String?   @db.VarChar(191)
  role                 String    @default("USER") // Can be "USER", "ADMIN", or "OWNER"
  status               String    @default("active") // Can be "active" or "banned"
  region               String?
  realm                String?
  createdAt            DateTime  @default(now())
  guides               Guide[]
  passwordResetToken   String?   @unique
  passwordResetExpires DateTime?
}

model Guide {
  id                   Int      @id @default(autoincrement())
  title                String
  category             String?
  status               String   @default("DRAFT") // DRAFT or PUBLISHED
  expansion            String?
  is_route             Boolean  @default(false)
  is_transmog          Boolean  @default(false)
  guide_type           String?
  map_image_url        String?  @db.VarChar(1024)
  recommended_addons   Json?
  macro_string         String?  @db.Text
  gold_sessions        Json?
  description          String?  @db.Text
  steps                String?  @db.Text
  thumbnail_url        String?  @db.VarChar(1024)
  video_thumbnail_path String?  @db.VarChar(1024)
  youtube_video_id     String?
  time_to_complete     String?
  recommended_class    String?
  required_items       String?  @db.Text
  items_of_note        Json?
  gold_pr_hour         String?
  tsm_import_string    String?  @db.Text
  route_string         String?  @db.Text
  slider_images        String?  @db.Text
  tags                 String?  @db.Text
  authorId             Int
  author               User     @relation(fields: [authorId], references: [id])
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model ItemPrice {
  id               Int      @id @default(autoincrement())
  itemId           Int
  region           String   @db.VarChar(10)
  realmSlug        String   @db.VarChar(35)
  userRealmPrice   Int?
  regionalAvgPrice Int?
  updatedAt        DateTime @updatedAt


  @@unique([itemId, region, realmSlug])

  @@index([itemId, region, realmSlug])
}

model WowTokenPrice {
  id        Int      @id @default(autoincrement())
  region    String   @unique
  price     Float
  trend     String   @default("stable") // This line is crucial
  updatedAt DateTime @updatedAt
}

model WowTokenPriceHistory {
  id        Int      @id @default(autoincrement())
  region    String
  price     Float
  createdAt DateTime @default(now())

  @@index([region])
}

model LogEntry {
  id        String   @id @default(cuid())
  time      DateTime
  message   String
  createdAt DateTime @default(now())
}

model ItemPriceHistory {
  id               String   @id @default(cuid())
  itemId           Int
  region           String
  realmSlug        String
  userRealmPrice   Int
  regionalAvgPrice Int
  timestamp        DateTime @default(now())
}

model apiLog {
  id        Int      @id @default(autoincrement())
  type      String
  level     String
  message   String
  timestamp DateTime @default(now())
}

